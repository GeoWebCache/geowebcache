<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <!-- mvn -Dtest=StorageBrokerTest -Dmaven.test.jvmargs='-XX:+HeapDumpOnOutOfMemoryError -Xms32m -Xmx32m' test -->  
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.geowebcache</groupId>
  <artifactId>geowebcache</artifactId>
  <packaging>pom</packaging>
  <version>1.18-SNAPSHOT</version><!-- GWC VERSION -->
  <name>geowebcache</name>
  <url>http://geowebcache.org</url>

  <properties>
    <gt.version>24-SNAPSHOT</gt.version>
    <jts.version>1.16.1</jts.version>
    <jaiext.version>1.1.14</jaiext.version>
    <spring.version>5.1.13.RELEASE</spring.version>
    <xstream.version>1.4.11.1</xstream.version>
    <spring.security.version>5.1.8.RELEASE</spring.security.version>
    <commons-logging.version>1.1.1</commons-logging.version>
    <commons-io.version>2.6</commons-io.version>
    <commons-dbcp.version>1.4</commons-dbcp.version>
    <commons-collections.version>3.2.2</commons-collections.version>
    <commons-codec.version>1.10</commons-codec.version>
    <commons-text.version>1.4</commons-text.version>
    <commons-fileupload.version>1.3.3</commons-fileupload.version>
    <guava.version>27.0-jre</guava.version>
    <jsr305.version>3.0.1</jsr305.version>
    <log4j.version>1.2.14</log4j.version>
    <h2.version>1.1.119</h2.version>
    <postgresql.version>9.4.1208</postgresql.version>
    <oracle.version/>
    <java.awt.headless>true</java.awt.headless>
    <jalopy.phase>disabled</jalopy.phase>
    <jalopy.srcExcludesPattern>disabled</jalopy.srcExcludesPattern>
    <test.maxHeapSize>64M</test.maxHeapSize>
    <maven.test.jvmargs/>
    <imageio-ext.version>1.3.1</imageio-ext.version>
    <hazelcast.version>3.11-BETA-1</hazelcast.version>
    <joda-time.version>2.8.1</joda-time.version>
    <fmt.action>format</fmt.action>
    <fmt.skip>false</fmt.skip>
    <jackson.version>2.10.1</jackson.version>
    <jetty.version>9.4.18.v20190429</jetty.version>
    <errorProneFlags></errorProneFlags>
    <errorProne.version>2.3.4</errorProne.version>
    <javac.version>9+181-r4173-1</javac.version>
    <pmd.version>6.20.0</pmd.version>
    <checkstyle.skip>false</checkstyle.skip>
    <qa>false</qa>
    <lint>deprecation</lint>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>
  
  <repositories>
    <repository>
      <id>boundless</id>
      <name>Boundless Maven Repository</name>
      <url>https://repo.boundlessgeo.com/main/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>osgeo</id>
      <name>Open Source Geospatial Foundation Repository</name>
      <url>https://download.osgeo.org/webdav/geotools/</url>
    </repository>
  </repositories>
 
  <distributionManagement>
    <repository>
      <id>boundless</id>
      <name>Boundless</name>
      <url>https://repo.boundlessgeo.com/release/</url>
      <uniqueVersion>false</uniqueVersion>
    </repository>
    <snapshotRepository>
      <id>boundless</id>
      <uniqueVersion>false</uniqueVersion>
      <name>Boundless Maven Repository</name>
      <url>https://repo.boundlessgeo.com/snapshot/</url>
     </snapshotRepository>
  </distributionManagement>

 <dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.geowebcache</groupId>
      <artifactId>gwc-core</artifactId>
      <version>${project.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.locationtech.jts</groupId>
      <artifactId>jts-core</artifactId>
      <version>${jts.version}</version>
      <exclusions>
        <exclusion>
          <groupId>xerces</groupId>
          <artifactId>xercesImpl</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>jsr305</artifactId>
      <version>${jsr305.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <version>${commons-logging.version}</version>
      <exclusions>
    <exclusion>
      <groupId>avalon-framework</groupId>
      <artifactId>avalon-framework</artifactId>
    </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>commons-dbcp</groupId>
      <artifactId>commons-dbcp</artifactId>
      <version>${commons-dbcp.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>${commons-text.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>${commons-collections.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons-codec.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-fileupload</groupId>
      <artifactId>commons-fileupload</artifactId>
      <version>${commons-fileupload.version}</version>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>

    <dependency>
      <groupId>it.geosolutions.jaiext.utilities</groupId>
      <artifactId>jt-utilities</artifactId>
      <version>${jaiext.version}</version>
    </dependency>
    <dependency>
      <groupId>it.geosolutions.jaiext.colorindexer</groupId>
      <artifactId>jt-colorindexer</artifactId>
      <version>${jaiext.version}</version>
    </dependency>


    <!-- PNG Encoder dependencies -->
	<dependency>
      <groupId>it.geosolutions.imageio-ext</groupId>
      <artifactId>imageio-ext-png</artifactId>
      <version>${imageio-ext.version}</version>
    </dependency>
    
    <dependency>
		<groupId>it.geosolutions.imageio-ext</groupId>
		<artifactId>imageio-ext-streams</artifactId>
		<version>${imageio-ext.version}</version>
	</dependency>
	
    <!-- dependency>
      <groupId>jcs</groupId>
      <artifactId>jcs</artifactId>
      <version>1.3</version>
      <exclusions>
    <exclusion>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
    </exclusion>
    <exclusion>
      <groupId>berkeleydb</groupId>
      <artifactId>berkeleydb</artifactId>
    </exclusion>
    <exclusion>
      <groupId>hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
    </exclusion>
      </exclusions>
    </dependency -->
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.12</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-integration</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymock</artifactId>
      <version>3.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymockclassextension</artifactId>
      <version>3.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
     <groupId>org.mockito</groupId>
     <artifactId>mockito-all</artifactId>
     <version>1.8.5</version>
    </dependency>
    <dependency>
      <groupId>httpunit</groupId>
      <artifactId>httpunit</artifactId>
      <version>1.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.xmlunit</groupId>
      <artifactId>xmlunit-legacy</artifactId>
      <version>2.3.0</version>
      <scope>test</scope>
    </dependency>
    
    <!-- Spring dependencies -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aop</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <exclusions>
        <exclusion>  <!-- Use our own commons-logging  -->
          <groupId>org.springframework</groupId>
          <artifactId>spring-jcl</artifactId>
        </exclusion>
      </exclusions>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring.version}</version>
      <!-- optional>true</optional -->
    </dependency>
   
    <!--  Jetty starter dependencies -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-webapp</artifactId>
      <version>${jetty.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
     <groupId>org.freemarker</groupId>
     <artifactId>freemarker</artifactId>
     <version>2.3.18</version> <!-- track same version than GeoServer -->
    </dependency>
    
    <dependency>
      <groupId>com.thoughtworks.xstream</groupId>
      <artifactId>xstream</artifactId>
      <version>${xstream.version}</version>
    </dependency>
    
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-web</artifactId>
      <version>${spring.security.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-config</artifactId>
      <version>${spring.security.version}</version>
    </dependency>
    
    <dependency>
      <groupId>org.codehaus.jettison</groupId>
      <artifactId>jettison</artifactId>
      <version>1.0.1</version>
    </dependency>
    
    <dependency>
      <groupId>stax</groupId>
      <artifactId>stax-api</artifactId>
      <version>1.0.1</version>
    </dependency>

    <dependency>
      <!-- StAX is the reference implementation of the StAX API -->
      <groupId>stax</groupId>
      <artifactId>stax</artifactId>
      <version>1.2.0</version>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgresql.version}</version>
    </dependency>

    <dependency>
      <artifactId>ojdbc14</artifactId>
      <groupId>com.oracle</groupId>
      <version>${oracle.version}</version>
    </dependency>

    <!-- Berkeley DB JE -->
    <dependency>
      <groupId>com.sleepycat</groupId>
      <artifactId>je</artifactId>
      <version>4.1.10</version>
    </dependency>

    <!-- Pinned transitive dependency of gwc-aws-s3 via aws-java-sdk-core. -->
    <!-- Other code should use Java 8 JSR 310 java.time instead of joda-time. -->
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>${joda-time.version}</version>
    </dependency>

    <!-- Pin some additional transitive dependencies in S3 module for consistency-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>

  </dependencies>
 </dependencyManagement>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <configuration>
          <formats>
            <format>html</format>
            <format>xml</format>
          </formats>
        </configuration>
      </plugin>
     <!-- javadoc -->
     <plugin>
      <artifactId>maven-javadoc-plugin</artifactId>
      <configuration>
       <source>1.8</source>
       <version>false</version>
       <noqualifier>all</noqualifier>
       <maxmemory>256M</maxmemory>
       <encoding>ISO-8859-1</encoding>
       <additionalparam>-keywords</additionalparam>
       <tags>
        <tag>
         <name>todo</name>
         <placement>tfmc</placement>
         <head>TODO:</head>
        </tag>
        <tag>
         <name>task</name>
         <placement>tfmc</placement>
         <head>TODO:</head>
        </tag>
        <tag>
         <name>revisit</name>
         <placement>tfmc</placement>
         <head>TODO:</head>
        </tag>
       </tags>
       <links>
        <link>http://docs.oracle.com/javase/7/docs/api/</link>
        <link>http://docs.geotools.org/stable/javadocs/</link>
       </links>
      </configuration>
     </plugin>
    </plugins>
  </reporting>

 
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>1.0-beta-3</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <format>{0,date,yyyy-MM-dd HH:mm:ss}</format>
          <items>
            <item>timestamp</item>
          </items>
          <doCheck>false</doCheck>
          <doUpdate>false</doUpdate>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <archive>
            <index>true</index>
            <manifest>
              <addClasspath>false</addClasspath>
            </manifest>
            <manifestEntries>
              <Specification-Title>org.geowebcache</Specification-Title>
              <Specification-Version>${project.version}</Specification-Version>
              <Specification-Vendor>${project.url}</Specification-Vendor>
              <Implementation-Title>org.geowebcache</Implementation-Title>
              <Implementation-Version>${build.branch}/${build.commit.id}</Implementation-Version>
              <Implementation-Vendor>${project.url}</Implementation-Vendor>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-compiler-plugin</artifactId>
    <version>3.8.0</version>
    <configuration>
      <source>1.8</source>
      <target>1.8</target>
      <encoding>UTF-8</encoding>
    </configuration>
      </plugin>
      
      <plugin>
    <artifactId>maven-source-plugin</artifactId>
    <version>2.2.1</version>
    <configuration>
      <attach>true</attach>
    </configuration>
    <executions>
      <execution>
        <id>attach-sources</id>
        <goals>
          <goal>jar</goal>
        </goals>
      </execution>
    </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.1</version>
        <configuration>
          <forkMode>pertest</forkMode>
          <argLine>${maven.test.jvmargs} -XX:+IgnoreUnrecognizedVMOptions --illegal-access=warn</argLine>
          <argLine>-Djava.awt.headless=true</argLine> <!-- prevent ForkedBooter focus steal on macOS -->
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.19.1</version>
        <configuration>
          <argLine>-Djava.awt.headless=true</argLine> <!-- prevent ForkedBooter focus steal on macOS -->
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- initialize git revision info -->
      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>2.0.4</version>
        <executions>
          <execution>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <prefix>build</prefix>
          <failOnNoGitDirectory>false</failOnNoGitDirectory>
          <skipPoms>false</skipPoms>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <!--descriptorRefs>
            <descriptorRef>project</descriptorRef>
          </descriptorRefs-->
          <descriptors>
            <descriptor>release/src.xml</descriptor>
            <descriptor>release/war.xml</descriptor>
            <descriptor>release/doc.xml</descriptor>
          </descriptors>
          <finalName>geowebcache-1.17-SNAPSHOT</finalName>
          <outputDirectory>${project.build.directory}/release</outputDirectory>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.coveo</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>2.4.0</version>
        <configuration>
          <verbose>false</verbose>
          <filesNamePattern>.*\.java</filesNamePattern>
          <skip>${fmt.skip}</skip>
          <style>aosp</style>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>${fmt.action}</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      
      <plugin>
        <groupId>org.commonjava.maven.plugins</groupId>
        <artifactId>directory-maven-plugin</artifactId>
        <version>0.3.1</version>
        <executions>
          <execution>
            <id>directories</id>
            <goals>
              <goal>highest-basedir</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <property>geowebcacheBaseDir</property>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    
    <extensions>
      <extension>
    <groupId>org.apache.maven.wagon</groupId>
    <artifactId>wagon-webdav</artifactId>
    <version>1.0-beta-2</version>
      </extension>
    </extensions>
    
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>2.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  
  <profiles>
    <profile>
      <id>pmd</id>
      <activation>
        <property>
          <name>qa</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>3.11.0</version>
            <dependencies>
              <dependency>
                <groupId>net.sourceforge.pmd</groupId>
                <artifactId>pmd-core</artifactId>
                <version>${pmd.version}</version>
              </dependency>
              <dependency>
                <groupId>net.sourceforge.pmd</groupId>
                <artifactId>pmd-java</artifactId>
                <version>${pmd.version}</version>
              </dependency>
              <dependency>
                <groupId>net.sourceforge.pmd</groupId>
                <artifactId>pmd-javascript</artifactId>
                <version>${pmd.version}</version>
              </dependency>
              <dependency>
                <groupId>net.sourceforge.pmd</groupId>
                <artifactId>pmd-jsp</artifactId>
                <version>${pmd.version}</version>
              </dependency>
            </dependencies>
            <configuration>
              <rulesets>
                <ruleset>${geowebcacheBaseDir}/pmd-ruleset.xml</ruleset>
              </rulesets>
              <failurePriority>3</failurePriority>
              <minimumPriority>3</minimumPriority>
              <verbose>true</verbose>
              <printFailingErrors>true</printFailingErrors>
              <excludeRoots>
                <excludeRoot>target/generated-sources</excludeRoot>
              </excludeRoots>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <!-- for those using JDK 11 -->
    <profile>
      <id>errorprone</id>
      <activation>
        <property>
          <name>qa</name>
        </property>
        <jdk>(1.8,)</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.0</version>
            <configuration>
              <fork>false</fork>
              <compilerArgs>
                <arg>-XDcompilePolicy=simple</arg>
                <arg>-Xplugin:ErrorProne -XepExcludedPaths:${project.build.directory}/generated-sources/.* ${errorProneFlags}</arg>
                <arg>-Xlint:${lint}</arg>
                <arg>-Werror</arg>
              </compilerArgs>
              <annotationProcessorPaths>
                <path>
                  <groupId>com.google.errorprone</groupId>
                  <artifactId>error_prone_core</artifactId>
                  <version>${errorProne.version}</version>
                </path>
              </annotationProcessorPaths>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <!-- using github.com/google/error-prone-javac is required when running on JDK 8 -->
    <profile>
      <id>errorprone8</id>
      <activation>
        <property>
          <name>qa</name>
        </property>
        <jdk>1.8</jdk>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.0</version>
            <configuration>
              <fork>true</fork>
              <compilerArgs combine.children="append">
                <arg>-XDcompilePolicy=simple</arg>
                <arg>-Xplugin:ErrorProne -XepExcludedPaths:${project.build.directory}/generated-sources/.* ${errorProneFlags}</arg>
                <arg>-J-Xbootclasspath/p:${settings.localRepository}/com/google/errorprone/javac/${javac.version}/javac-${javac.version}.jar</arg>
                <arg>-Xlint:${lint}</arg>
                <arg>-Werror</arg>
              </compilerArgs>
              <annotationProcessorPaths>
                <path>
                  <groupId>com.google.errorprone</groupId>
                  <artifactId>error_prone_core</artifactId>
                  <version>${errorProne.version}</version>
                </path>
              </annotationProcessorPaths>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>spotbugs</id>
      <activation>
        <property>
          <name>qa</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <version>3.1.10</version>
            <configuration>
              <effort>More</effort>
              <!--threshold>High</threshold-->
              <xmlOutput>true</xmlOutput>
              <maxRank>15</maxRank>
              <excludeFilterFile>${geowebcacheBaseDir}/spotbugs-exclude.xml</excludeFilterFile>
              <jvmArgs>-XX:+TieredCompilation -XX:TieredStopAtLevel=1</jvmArgs>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>check</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    <profile>
      <id>checkstyle</id>
      <activation>
        <property>
          <name>qa</name>
        </property>
      </activation>
      <build>
        <plugins>
           <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-checkstyle-plugin</artifactId>
              <version>3.1.1</version>
              <configuration>
                    <logViolationsToConsole>true</logViolationsToConsole>
                    <!-- ignore generated classes, e.g., javacc ones -->
                    <excludes>**/generated/**/*</excludes>
                    <skip>${checkstyle.skip}</skip>
                    <configLocation>${geowebcacheBaseDir}/checkstyle.xml</configLocation>
                  </configuration>
              <executions>
                <execution>
                  <goals>
                    <goal>check</goal>
                  </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>  
    </profile>
  </profiles>
  

  <modules>
    <module>core</module>
    <module>georss</module>
    <module>gmaps</module>
    <module>kml</module>
    <module>rest</module>
    <module>tms</module>
    <module>ve</module>
    <module>wms</module>
    <module>wmts</module>
    <module>web</module>
    <module>diskquota</module>
    <module>arcgiscache</module>
    <module>distributed</module>
    <module>s3storage</module>
    <module>sqlite</module>
    <module>azureblob</module>
    <module>swiftblob</module>
  </modules>
</project>
