GWC Release Guide
=================

- Online schema files
Copy geowebcache.xsd to http://geowebcache.org/schemas/<version>/geowebcache.xsd


On a clone of the main GWC repo, if don't already have it:
$ git clone git@github.com:GeoWebCache/geowebcache.git 

- Build docs
$ cd <project root>/documentation/en/user
$ make clean html

- Update project version
Set project version in pom.xml files:
$ cd <project root>/geowebcache
$ find . -name pom.xml -exec sed -i 's/1\.4\-SNAPSHOT/1\.4\.0/g' {} \;
$ find release -name "*.xml" -exec sed -i 's/1\.4\-SNAPSHOT/1\.4\.0/g' {} \;

(replace 1\.2\.4 by the actual version number keeping the '\' scape characters)

- Build version
$ cd <project root>/geowebcache
$ mvn clean install

- Package up release artifacts
$ mvn assembly:attached

The following files should be at <project root>/target/release:
 - geowebcache-<VERSION>-doc.zip
 - geowebcache-<VERSION>-src.zip
 - geowebcache-<VERSION>-war.zip

- Test the project artifact
$ cd target/release
$ unzip geowebcache-<VERSION>-src.zip
$ cd geowebcache-<VERSION>
$ mvn clean install

If project builds ok then proceed, otherwise check what's missing/incorrect. Fix and restart the release.

- Test the src artifact

$ cd <project root>/geowebcache/target/release
$ unzip geowebcache-<VERSION>-src.zip
$ mvn clean install
$ cd web
$ mvn jetty:run
Go to http://localhost:8080/geowebcache and check the app works as expected. Make sure the front page contains the
version number and build date. Test the demo pages
$ CTRL+C
$ cd ../..
$ rm -rf geowebcache-<VERSION>

- Test the war artifact

$ cd <project root>/geowebcache/target/release
$ unzip geowebcache-<VERSION>-war.zip
$ less LICENSE.txt //check license is copied ok
$ rm LICENSE.txt
$ mv geowebcache.war <tomcat dir>/webapps
$ cd <tomcat dir>
$ rm -rf temp/geowebcache (in case you had an older gwc version in there)
$ bin/startup.sh

Go to http://localhost:8080/geowebcache and check the app works as expected. Make sure the front page contains the
version number and build date. Test the demo pages

- Build schema docs
Make sure you have xsddoc installed: <http://sourceforge.net/projects/xframe/files/xsddoc/>. If not, download xsddoc.zip and:
$ unzip xsddoc.zip
$ cd xsddoc/bin
$ dos2unix xsddoc
$ chmod +x xsddoc
$ alias xsddoc=`pwd`/xsddoc

Now build the schema docs:

$ cd <project root>/geowebcache
$ export VERSION=<VERSION>
$ mkdir -p target/release/geowebcache-$VERSION/schema
$ xsddoc -o target/release/geowebcache-$VERSION/schema -t "GeoWebCache $VERSION Configuration Schema" core/src/main/resources/org/geowebcache/config/geowebcache.xsd

Check the generated docs:
$ cd target/release
$ firefox geowebcache-$VERSION/schema/index.html

Package up the docs:
$ zip -r geowebcache-$VERSION-xsddoc.zip geowebcache-$VERSION
$ rm -rf geowebcache-$VERSION

- Deploy
$ cd <project root>/geowebcache
$ mvn deploy

- Tag the release
$ cd <project root>/geowebcache
$ git add .
$ git commit -m "Set version to $VERSION"
$ git tag -a $VERSION -m "Tagging release $VERSION"

- Reset version info
Now reset the version number to major.minor-SNAPSHOT, but recording a reverse patch so the history is clear:
$git revert <commit id>
where <commit id> is the commit hash for the  "Set version to $VERSION" commit above. I.e. the first one shown by git log

$ git push origin
$ git push origin --tags
don't forget to add the --tags option so the new tag is pushed to the mainstream repo


